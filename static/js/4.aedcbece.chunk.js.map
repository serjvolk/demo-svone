{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/PrifileInfo/ProfileStatusWithHooks.jsx","components/Profile/PrifileInfo/ProfileInfo.jsx","components/Profile/PrifileInfo/Posts.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","css","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","body","row","col","image","src","photos","large","alt","text","name","fullName","age","sity","description","aboutMe","Preloader","Posts","id","postMessage","maxLength10","maxLengthCreator","Profile","React","memo","console","log","postsElements","posts","map","post","msg","AddPostFormRedux","onSubmit","values","addPostMessage","newPostText","reduxForm","form","addPost","handleSubmit","Field","component","Textarea","placeholder","validate","required","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","connect","state","profilePage","newPostTextVal","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.aedcbece.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__35m_D\",\"body\":\"Profile_body__1WtVw\",\"row\":\"Profile_row__1wGlB\",\"image\":\"Profile_image__3Vzz3\",\"text\":\"Profile_text__3Hzh5\",\"name\":\"Profile_name__2nd4k\",\"age\":\"Profile_age__3xI30\",\"sity\":\"Profile_sity__2rE97\",\"posts\":\"Profile_posts__2THfJ\",\"addPost\":\"Profile_addPost__2qkjQ\",\"status\":\"Profile_status__2YEVw\"};","import React, {useEffect, useState} from \"react\";\r\nimport css from \"./../Profile.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    // Задаем локальный state и говорим что он равен false\r\n    // useState это массив в нем первый элемент это  editMode, второй - функция которая может менять это значение\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    // Подобие componentDidMount. Если произошло обновление props, сетаем новый статус.\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]); // Зависимость от props.status. Тоесть что мы отслеживаем\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div className={css.status}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileStatusWithHooks;","import css from \"./../Profile.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nfunction ProfileInfo ({profile,status,updateStatus}) {\r\n    if(!profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={css.body}>\r\n            <div className={css.row}>\r\n                <div className={css.col}>\r\n                    <div className={css.image}>\r\n                        <img src={profile.photos.large} alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n                <div className={css.col}>\r\n                    <div className={css.text}>\r\n                        <p className={css.name}>{profile.fullName}</p>\r\n                        <p className={css.age}>2.7 лет</p>\r\n                        <p className={css.sity}>Антарктида</p>\r\n                        <p className={css.description}>{profile.aboutMe}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n        </div>\r\n    );\r\n}\r\nexport default ProfileInfo;","function Posts (props) {\r\n    return (\r\n       <li id={props.id}>{props.postMessage}</li>\r\n    );\r\n}\r\nexport default Posts;","import css from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./PrifileInfo/ProfileInfo\";\r\nimport Posts from \"./PrifileInfo/Posts\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst Profile = React.memo(props => {\r\n    console.log('RENDER');\r\n    console.log(props);\r\n    let postsElements = props.posts.map((post) => <Posts postMessage={post.msg} id={post.id} key={post.id}/>);\r\n\r\n    let addNewPostMessage = (values) => {\r\n        props.addPostMessage(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={css.profile}>\r\n            <div className=\"container\">\r\n                <ProfileInfo profile={props.profile} status={props.status}\r\n                             updateStatus={props.updateStatus}/>\r\n                <ul className={css.posts}>\r\n                    {postsElements}\r\n                </ul>\r\n                <AddPostFormRedux onSubmit={addNewPostMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form className={css.addPost} onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={\"newPostText\"} placeholder={\"Enter your post message\"} validate={[required, maxLength10]}/>\r\n            <button>Сохранить</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"addPostMessageForm\"})(AddPostForm);\r\n\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {addPostMessage, getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId; // Получаем id от withRouter\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render(){\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n// Формируем данные для Profile\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostTextVal,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addPostMessage, getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}